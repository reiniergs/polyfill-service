{"aliases":["es6"],"browsers":{"android":"*","bb":"*","chrome":"1 - 37","firefox":"1 - 24","ie":"*","ie_mob":"10 - *","ios_chr":"*","ios_saf":"4 - 7","opera":"10 - 20","op_mob":"*","op_mini":"*","safari":"4 - 7","firefox_mob":"1 - 24"},"esversion":6,"docs":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/acosh","spec":"http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.acosh","detectSource":"'acosh' in Math","testSource":"","baseDir":"Math/acosh","hasTests":true,"testsSource":"/* eslint-env mocha, browser*/\n/* global proclaim, it */\n\n// Math.acosh(x)\n//\n// Returns an implementation-dependent approximation of the inverse hyperbolic\n// cosine of x  (See: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.acosh)\n\nit(\"Should return NaN when using a number less than one\", function() {\n\tvar x = Math.acosh(-1);\n\tvar y = Math.acosh(0.99);\n\tproclaim.equal(x.toString(), NaN.toString());\n\tproclaim.equal(y.toString(), NaN.toString());\n});\n\nit(\"Should return NaN if the parameter is NaN\", function() {\n\tvar x = Math.acosh(NaN);\n\tproclaim.equal(x.toString(), NaN.toString());\n});\n\nit(\"Should return 0 if the parameter is 1\", function() {\n\tvar x = Math.acosh(1);\n\tproclaim.equal(x, 0);\n});\n\nit(\"Should return Number.POSITIVE_INFINITY if the parameter is Number.POSITIVE_INFINITY\", function() {\n\tvar x = Math.acosh(Number.POSITIVE_INFINITY);\n\tproclaim.equal(x, Number.POSITIVE_INFINITY);\n});\n\nit(\"Should return an approximation of the inverse hyperbolic cosine of the parameter\", function() {\n\tvar x = Math.acosh(10.5);\n\tproclaim.lessThanOrEqual(x, 3.05);\n\tproclaim.greaterThanOrEqual(x, 3.03);\n});"}