{"aliases":["default-3.3","default-3.4","default-3.5","default-3.6","default","es5","modernizr:es5function","blissfuljs"],"browsers":{"ie":"6 - 8","firefox":"3.6","safari":"4 - 5.1","ios_saf":"<=5","firefox_mob":"3.6"},"dependencies":["Object.defineProperty"],"repo":"https://github.com/es-shims/es5-shim","license":"MIT","docs":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind","spec":"http://people.mozilla.org/~jorendorff/es6-draft.html#sec-function.prototype.bind","detectSource":"'bind' in Function.prototype","testSource":"","baseDir":"Function/prototype/bind","hasTests":true,"testsSource":"/* eslint-env mocha, browser*/\n/* global proclaim, it */\n\nit(\"Should be able to return a function with 'this' bound to the specified value\", function(done){\n\tvar thisVal = {foo:'bar'};\n\tvar func = function(){\n\t\tproclaim.deepEqual(this, thisVal);\n\t\tdone();\n\t};\n\tvar testFunc = func.bind(thisVal);\n\ttestFunc();\n});\n\nit(\"Handles new BoundFunction\", function(done) {\n\tvar thisVal = {foo:'bar'};\n\tfunction MyClass(){\n\t\tproclaim.notDeepEqual(this, thisVal);\n\t\tdone();\n\t};\n\tvar MyClassThing = MyClass.bind(thisVal);\n\tnew MyClassThing();\n});\n\nit('Should be able to return a function with the given arguments bound', function(done){\n\tvar thisVal = {foo:'bar'};\n\tvar func = function(arg1, arg2){\n\t\tproclaim.deepEqual(this, thisVal);\n\t\tproclaim.equal(arg1, 'foo');\n\t\tproclaim.equal(arg2, 'bar');\n\t\tdone();\n\t};\n\tvar testFunc = func.bind(thisVal, 'foo');\n\ttestFunc('bar');\n});"}