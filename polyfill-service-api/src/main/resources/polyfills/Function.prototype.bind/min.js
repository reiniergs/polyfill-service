Object.defineProperty(Function.prototype,"bind",{value:function(t){var n,o=Array,r=Object,e=r.prototype,i=o.prototype,c=function(){},p=e.toString,l="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag,a=Function.prototype.toString,u=function(t){try{return a.call(t),!0}catch(n){return!1}};n=function(t){if("function"!=typeof t)return!1;if(l)return u(t);var n=p.call(t);return"[object Function]"===n||"[object GeneratorFunction]"===n};var y=i.slice,f=i.concat,b=i.push,h=Math.max,s=this;if(!n(s))throw new TypeError("Function.prototype.bind called on incompatible "+s);for(var g,d=y.call(arguments,1),m=function(){if(this instanceof g){var n=s.apply(this,f.call(d,y.call(arguments)));return r(n)===n?n:this}return s.apply(t,f.call(d,y.call(arguments)))},v=h(0,s.length-d.length),F=[],j=0;j<v;j++)b.call(F,"$"+j);return g=Function("binder","return function ("+F.join(",")+"){ return binder.apply(this, arguments); }")(m),s.prototype&&(c.prototype=s.prototype,g.prototype=new c,c.prototype=null),g}});