{"aliases":["default-3.3","default-3.4","default-3.5","default-3.6","default","blissfuljs"],"browsers":{"ie":"8"},"dependencies":["Element"],"spec":"http://w3.org/TR/DOM-Level-3-Core/core.html#ID-3A0ED0A4","docs":"https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode","detectSource":"'document' in this && \"cloneNode\" in document.documentElement && (function() {\n\tvar test = document.createElement('input');\n\ttest.checked = true;\n\tvar result = test.cloneNode();\n\treturn !!result.checked;\n})()","testSource":"","baseDir":"Element/prototype/cloneNode","hasTests":true,"testsSource":"/* eslint-env mocha, browser*/\n/* global proclaim, it */\n\nfunction create(html) {\n\tvar div = document.createElement('div');\n\tdiv.innerHTML = html;\n\treturn div.firstChild;\n}\nfunction htmlify(el) {\n\treturn el.outerHTML.toLowerCase().replace(/^[\\r\\n\\s]+/, '').replace(/[\\r\\n\\s]+$/, '');\n}\n\nit(\"should clone a node by name\", function() {\n\tvar clone = create('<div></div>').cloneNode();\n\tproclaim.equal(clone.nodeName, \"DIV\");\n\tproclaim.match(clone.outerHTML, /^\\s*<div><\\/div>\\s*$/i);\n});\n\nit('should do deep copy', function() {\n\tvar clone = create('<p>text <b>content</b></p>').cloneNode(true);\n\tproclaim.equal(htmlify(clone), '<p>text <b>content</b></p>')\n})\n\nit('should do shallow copy', function() {\n\tvar clone = create('<p>text <b>content</b></p>').cloneNode(false);\n\tproclaim.equal(htmlify(clone), '<p></p>')\n})\n\nit(\"should clone attributes in shallow mode\", function() {\n\tvar clone = create('<div class=\"foo\" test=\"test\"></div>').cloneNode(false);\n\tproclaim.equal(clone.nodeName, \"DIV\");\n\tproclaim.equal(clone.innerHTML, '');\n\tproclaim.equal(clone.getAttribute('test'), 'test');\n\tproclaim.equal(clone.getAttribute('class'), 'foo');\n\tproclaim.equal(clone.className, 'foo');\n});\n\nit('should clone self-closing elements', function() {\n\tvar clone = create('<br>').cloneNode();\n\tproclaim.equal(clone.nodeName, \"BR\");\n\tproclaim.match(htmlify(clone), /^<br( \\/)?>$/);\n});\n\nit('should retain checked state of checkbox elements', function() {\n\tvar inp = create(\"<input type='checkbox' />\");\n\tinp.checked = true;\n\tvar clone = inp.cloneNode();\n\tproclaim.equal(clone.nodeName, \"INPUT\");\n\tproclaim.equal(clone.checked, true);\n});\n\n/* TEST SKIPPED: this doesn't work in IE < 9, which results in <:nav></:nav>.  Support for this could probably be added to the polyfill */\nit.skip('can clone HTML5 elements', function() {\n\tvar clone = document.createElement('nav').cloneNode();\n\tproclaim.equal(htmlify(clone), '<nav></nav>');\n});"}