{"aliases":["default-3.3","default-3.4","default-3.5","default-3.6","default","es5","modernizr:es5array","blissfuljs"],"browsers":{"ie":"6 - 8","firefox":"3.6","safari":"4","firefox_mob":"3.6"},"dependencies":["Object.defineProperty"],"spec":"http://people.mozilla.org/~jorendorff/es6-draft.html#sec-isarray","docs":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray","detectSource":"'isArray' in Array","testSource":"","baseDir":"Array/isArray","hasTests":true,"testsSource":"/* eslint-env mocha, browser*/\n/* global proclaim, it */\n\nit('has correct instance', function () {\n\tproclaim.isInstanceOf(Array.isArray, Function);\n});\n\nit('has correct name', function () {\n\tfunction nameOf(fn) {\n\t\treturn Function.prototype.toString.call(fn).match(/function\\s*([^\\s]*)\\(/)[1];\n\t}\n\tproclaim.equal(nameOf(Array.isArray), 'isArray');\n});\n\nit('has correct argument length', function () {\n\tproclaim.equal(Array.isArray.length, 1);\n});\n\ndescribe('returns true with', function () {\n\tit('arrays', function () {\n\t\tproclaim.equal(Array.isArray(new Array), true);\n\t\tproclaim.equal(Array.isArray(new Array(10)), true);\n\t\tproclaim.equal(Array.isArray([]), true);\n\t\tproclaim.equal(Array.isArray(['a', 'b', 'c']), true);\n\t});\n});\n\ndescribe('returns false with', function () {\n\tit('empty, null, or undefined', function () {\n\t\tproclaim.equal(Array.isArray(), false);\n\t\tproclaim.equal(Array.isArray(undefined), false);\n\t\tproclaim.equal(Array.isArray(null), false);\n\t});\n\n\tit('arguments', function () {\n\t\tvar args = (function () {\n\t\t\treturn arguments;\n\t\t}('a', 'b', 'c'));\n\n\t\tproclaim.equal(Array.isArray(args), false);\n\t});\n\n\tit('primatives', function () {\n\t\tproclaim.equal(Array.isArray(true), false);\n\t\tproclaim.equal(Array.isArray('abc'), false);\n\t\tproclaim.equal(Array.isArray(123), false);\n\t});\n\n\tit('instances', function () {\n\t\tproclaim.equal(Array.isArray(new Date), false);\n\t\tproclaim.equal(Array.isArray(new Object), false);\n\t\tproclaim.equal(Array.isArray(new Function), false);\n\t\tproclaim.equal(Array.isArray(new Number), false);\n\t\tproclaim.equal(Array.isArray(new String), false);\n\t});\n\n\tit('constructors', function () {\n\t\tproclaim.equal(Array.isArray(Math), false);\n\t\tproclaim.equal(Array.isArray(Object), false);\n\t\tproclaim.equal(Array.isArray(Number), false);\n\t\tproclaim.equal(Array.isArray(String), false);\n\t});\n\n\tit('objects', function () {\n\t\tproclaim.equal(Array.isArray({}), false);\n\t\tproclaim.equal(Array.isArray({\n\t\t\t0: 'a',\n\t\t\t1: 'b',\n\t\t\t2: 'c',\n\t\t\tlength: 3\n\t\t}), false);\n\t});\n\n\tit('objects as array subclasses', function () {\n\t\tfunction NotArray() {}\n\n\t\tNotArray.prototype = new Array;\n\n\t\tproclaim.equal(Array.isArray(new NotArray), false);\n\t});\n\n\tit('functions', function () {\n\t\tproclaim.equal(Array.isArray(function () {\n\t\t\treturn [];\n\t\t}), false);\n\t});\n\n\tit('regular expressions', function () {\n\t\tproclaim.equal(Array.isArray(/abc/), false);\n\t});\n});"}