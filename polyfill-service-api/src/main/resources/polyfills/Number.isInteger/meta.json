{"aliases":["es6"],"browsers":{"ie":"<13","ie_mob":"*","chrome":"<19","ios_chr":"*","safari":"<9","ios_saf":"<9","firefox":"<16","firefox_mob":"*","android":"<5","opera":"<22","op_mob":"*","op_mini":"*","samsung_mob":"<5","bb":"*"},"license":"MIT","spec":"http://www.ecma-international.org/ecma-262/6.0/#sec-number.isinteger","docs":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger","detectSource":"'isInteger' in Number","testSource":"","baseDir":"Number/isInteger","hasTests":true,"testsSource":"/* eslint-env mocha, browser*/\n/* global proclaim, it */\n\nit('has correct instance', function () {\n\tproclaim.isInstanceOf(Number.isInteger, Function);\n});\n\nit('has correct argument length', function () {\n\tproclaim.equal(Number.isInteger.length, 1);\n});\n\nit('returns true with integer values', function () {\n\tproclaim.equal(Number.isInteger(0), true);\n\tproclaim.equal(Number.isInteger(1), true);\n\tproclaim.equal(Number.isInteger(-100000), true);\n});\n\nit('returns false for non integer values', function () {\n\tproclaim.equal(Number.isInteger(0.1), false);\n\tproclaim.equal(Number.isInteger(Math.PI), false);\n\n\tproclaim.equal(Number.isInteger(Infinity), false);\n\tproclaim.equal(Number.isInteger(-Infinity), false);\n\tproclaim.equal(Number.isInteger(\"10\"), false);\n\tproclaim.equal(Number.isInteger(true), false);\n\tproclaim.equal(Number.isInteger(false), false);\n\tproclaim.equal(Number.isInteger([1]), false);\n});"}