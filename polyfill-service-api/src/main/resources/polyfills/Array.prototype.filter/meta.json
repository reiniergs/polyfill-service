{"aliases":["default-3.3","default-3.4","default-3.5","default-3.6","default","es5","modernizr:es5array","blissfuljs"],"browsers":{"ie":"6 - 8"},"spec":"http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.filter","docs":"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/filter","detectSource":"'filter' in Array.prototype","testSource":"","baseDir":"Array/prototype/filter","hasTests":true,"testsSource":"/* eslint-env mocha, browser*/\n/* global proclaim, it */\n\nvar stringsOnly = function(val) {\n\treturn (typeof val === 'string');\n};\n\nit('is a function', function() {\n\tproclaim.isInstanceOf(Array.prototype.filter, Function);\n});\n\nit('takes 1 argument', function() {\n\tproclaim.equal(Array.prototype.filter.length, 1);\n});\n\nit('throws a TypeError when applied to non-array-like types', function() {\n\tproclaim.throws(function() {\n\t\tArray.prototype.filter.call(undefined);\n\t}, TypeError);\n\tproclaim.throws(function() {\n\t\tArray.prototype.filter.call(null);\n\t}, TypeError);\n});\n\nit('correctly filters an array', function() {\n\tproclaim.deepEqual(Array.prototype.filter.call(['foo', 'bar'], stringsOnly), ['foo','bar']);\n\tproclaim.deepEqual(Array.prototype.filter.call([7, 'foo', 42, 'bar'], stringsOnly), ['foo','bar']);\n\tproclaim.deepEqual(Array.prototype.filter.call([42,43,44], stringsOnly), []);\n});"}