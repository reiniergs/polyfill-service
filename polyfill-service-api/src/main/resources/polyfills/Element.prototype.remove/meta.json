{"aliases":["default-3.4","default-3.5","default-3.6","default"],"browsers":{"android":"*","bb":"*","chrome":"* - 28","firefox":"<45","ios_chr":"*","ios_saf":"<9","ie":"<14","ie_mob":"10 - *","opera":"* - 15","op_mini":"*","safari":"<9.1","firefox_mob":"3.6 - *"},"dependencies":["Document","Element","_mutation"],"spec":"http://dom.spec.whatwg.org/#dom-childnode-remove","docs":"https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove","detectSource":"'Element' in this && 'remove' in Element.prototype","testSource":"","baseDir":"Element/prototype/remove","hasTests":true,"testsSource":"/* eslint-env mocha, browser*/\n/* global proclaim, it */\n\nvar element, child;\n\nfunction nameOf(fn) {\n\treturn Function.prototype.toString.call(fn).match(/function\\s*([^\\s]*)\\(/)[1];\n}\n\nbeforeEach(function () {\n\telement = document.createElement('div');\n\tchild = document.createElement('div');\n\n\telement.appendChild(child);\n});\n\nit('has correct instance', function () {\n\tproclaim.isInstanceOf(element.remove, Function);\n});\n\nit('has correct name', function () {\n\tproclaim.equal(nameOf(element.remove), 'remove');\n});\n\nit('has correct argument length', function () {\n\tproclaim.equal(element.remove.length, 0);\n});\n\nit('can remove itself', function () {\n\tproclaim.equal(child.remove(), undefined);\n\n\tproclaim.equal(element.childNodes.length, 0);\n});\n\nit('can remove itself from nothing', function () {\n\tproclaim.equal(child.remove(), undefined);\n\tproclaim.equal(child.remove(), undefined);\n\n\tproclaim.equal(element.childNodes.length, 0);\n});"}