{"aliases":["es6"],"browsers":{"ie":"<12","ie_mob":"*","firefox":"<31","firefox_mob":"<32","chrome":"<34","android":"<5","safari":"<9","ios_saf":"<9","opera":"*","op_mini":"*","op_mob":"*","bb":"*"},"license":"MIT","spec":"http://www.ecma-international.org/ecma-262/6.0/#sec-number.min_safe_integer","docs":"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER","detectSource":"'MIN_SAFE_INTEGER' in Number","testSource":"","baseDir":"Number/MIN_SAFE_INTEGER","hasTests":true,"testsSource":"/* eslint-env mocha, browser*/\n/* global proclaim, it */\n\nit('should have min safe integer defined', function() {\n\tproclaim.isDefined(Number.MIN_SAFE_INTEGER);\n});\n\n\nit('should be correct value', function() {\n\tproclaim.equal(Number.MIN_SAFE_INTEGER, -Math.pow(2, 53) + 1);\n});\n\nxit('should not be enumerable', function() {\n\tif (Number.propertyIsEnumerable) {\n\t\tproclaim.equal(Number.propertyIsEnumerable('MIN_SAFE_INTEGER'), false);\n\t} else {\n\t\tthis.skip();\n\t}\n});"}