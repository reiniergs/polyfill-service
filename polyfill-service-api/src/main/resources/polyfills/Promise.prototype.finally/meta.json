{"aliases":[],"browsers":{"android":">4.4","bb":">10","chrome":">31","firefox":">28","ios_saf":">7.1","ie":">12","ie_mob":"*","opera":">19","op_mini":"*","safari":">7","firefox_mob":">28"},"dependencies":["Promise","Function.prototype.bind"],"notes":["The Promise polyfill includes `Promise.prototype.finally`, to avoid needlessly serving this polyfill to those browsers, we have configured the browser targets for this polyfill to not include those configured in the Promise polyfill."],"license":"MIT","docs":"https://tc39.github.io/proposal-promise-finally/","detectSource":"'Promise' in this && 'finally' in Promise.prototype","testSource":"","baseDir":"Promise/prototype/finally","hasTests":true,"testsSource":"describe('finally' , function() {\n\tit(\"does not take any arguments\", function () {\n\t\t\treturn Promise.resolve(\"ok\")['finally'](function (val) {\n\t\t\t\tproclaim.equal(val, undefined);\n\t\t\t});\n\t});\n\n\tit(\"can throw errors and be caught\", function () {\n\t\t\treturn Promise.resolve(\"ok\")['finally'](function () {\n\t\t\t\t\tthrow \"error\";\n\t\t\t})['catch'](function (e) {\n\t\t\t\t\tproclaim.equal(e, 'error');\n\t\t\t});\n\t});\n\n\tit(\"resolves with resolution value if finally method doesn't throw\", function () {\n\t\t\treturn Promise.resolve(\"ok\")['finally'](function () {\n\t\t\t}).then(function(val) {\n\t\t\t\tproclaim.equal(val, 'ok');\n\t\t\t});\n\t});\n\n\tit(\"rejects with rejection value if finally method doesn't throw\", function () {\n\t\t\treturn Promise.reject(\"error\")['finally'](function () {\n\t\t\t})['catch'](function(val) {\n\t\t\t\tproclaim.equal(val, 'error');\n\t\t\t});\n\t});\n});\n\n// These tests are taken from https://github.com/tc39/proposal-promise-finally/blob/master/test/test.js\n// Licensed under MIT\nvar someRejectionReason = { message: 'some rejection reason' };\nvar anotherReason = { message: 'another rejection reason' };\n\ndescribe('onFinally', function() {\n\tdescribe('no callback', function() {\n\t\tspecify('from resolved', function() {\n\t\t\treturn Promise.resolve(3)\n\t\t\t\t.then(function(x) {\n\t\t\t\t\tproclaim.strictEqual(x, 3);\n\t\t\t\t\treturn x;\n\t\t\t\t})\n\t\t\t\t['finally']()\n\t\t\t\t.then(function onFulfilled(x) {\n\t\t\t\t\tproclaim.strictEqual(x, 3);\n\t\t\t\t}, function onRejected() {\n\t\t\t\t\tthrow new Error('should not be called');\n\t\t\t\t});\n\t\t});\n\n\t\tspecify('from rejected', function() {\n\t\t\treturn Promise.reject(someRejectionReason)\n\t\t\t\t['catch'](function(e) {\n\t\t\t\t\tproclaim.strictEqual(e, someRejectionReason);\n\t\t\t\t\tthrow e;\n\t\t\t\t})\n\t\t\t\t['finally']()\n\t\t\t\t.then(function onFulfilled() {\n\t\t\t\t\tthrow new Error('should not be called');\n\t\t\t\t}, function onRejected(reason) {\n\t\t\t\t\tproclaim.strictEqual(reason, someRejectionReason);\n\t\t\t\t});\n\t\t});\n\t});\n\n\tdescribe('throws an exception', function() {\n\t\tspecify('from resolved', function() {\n\t\t\treturn Promise.resolve(3)\n\t\t\t\t.then(function(x) {\n\t\t\t\t\tproclaim.strictEqual(x, 3);\n\t\t\t\t\treturn x;\n\t\t\t\t})\n\t\t\t\t['finally'](function onFinally() {\n\t\t\t\t\tproclaim.ok(arguments.length === 0);\n\t\t\t\t\tthrow someRejectionReason;\n\t\t\t\t}).then(function onFulfilled() {\n\t\t\t\t\tthrow new Error('should not be called');\n\t\t\t\t}, function onRejected(reason) {\n\t\t\t\t\tproclaim.strictEqual(reason, someRejectionReason);\n\t\t\t\t});\n\t\t});\n\n\t\tspecify('from rejected', function() {\n\t\t\treturn Promise.reject(anotherReason)['finally'](function onFinally() {\n\t\t\t\tproclaim.ok(arguments.length === 0);\n\t\t\t\tthrow someRejectionReason;\n\t\t\t}).then(function onFulfilled() {\n\t\t\t\tthrow new Error('should not be called');\n\t\t\t}, function onRejected(reason) {\n\t\t\t\tproclaim.strictEqual(reason, someRejectionReason);\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe('returns a non-promise', function() {\n\t\tspecify('from resolved', function() {\n\t\t\treturn Promise.resolve(3)\n\t\t\t\t.then(function(x) {\n\t\t\t\t\tproclaim.strictEqual(x, 3);\n\t\t\t\t\treturn x;\n\t\t\t\t})\n\t\t\t\t['finally'](function onFinally() {\n\t\t\t\t\tproclaim.ok(arguments.length === 0);\n\t\t\t\t\treturn 4;\n\t\t\t\t}).then(function onFulfilled(x) {\n\t\t\t\t\tproclaim.strictEqual(x, 3);\n\t\t\t\t}, function onRejected() {\n\t\t\t\t\tthrow new Error('should not be called');\n\t\t\t\t});\n\t\t});\n\n\t\tspecify('from rejected', function() {\n\t\t\treturn Promise.reject(anotherReason)\n\t\t\t\t['catch'](function(e) {\n\t\t\t\t\tproclaim.strictEqual(e, anotherReason);\n\t\t\t\t\tthrow e;\n\t\t\t\t})\n\t\t\t\t['finally'](function onFinally() {\n\t\t\t\t\tproclaim.ok(arguments.length === 0);\n\t\t\t\t\tthrow someRejectionReason;\n\t\t\t\t}).then(function onFulfilled() {\n\t\t\t\t\tthrow new Error('should not be called');\n\t\t\t\t}, function onRejected(e) {\n\t\t\t\t\tproclaim.strictEqual(e, someRejectionReason);\n\t\t\t\t});\n\t\t});\n\t});\n\n\tdescribe('returns a pending-forever promise', function() {\n\t\tspecify('from resolved', function(done) {\n\t\t\tPromise.resolve(3)\n\t\t\t\t.then(function(x) {\n\t\t\t\t\tproclaim.strictEqual(x, 3);\n\t\t\t\t\treturn x;\n\t\t\t\t})\n\t\t\t\t['finally'](function onFinally() {\n\t\t\t\t\tproclaim.ok(arguments.length === 0);\n\t\t\t\t\tsetTimeout(done, 0.1e3);\n\t\t\t\t\treturn new Promise(function() {}); // forever pending\n\t\t\t\t}).then(function onFulfilled(x) {\n\t\t\t\t\tthrow new Error('should not be called');\n\t\t\t\t}, function onRejected() {\n\t\t\t\t\tthrow new Error('should not be called');\n\t\t\t\t});\n\t\t});\n\n\t\tspecify('from rejected', function(done) {\n\t\t\tPromise.reject(someRejectionReason)\n\t\t\t\t['catch'](function(e) {\n\t\t\t\t\tproclaim.strictEqual(e, someRejectionReason);\n\t\t\t\t\tthrow e;\n\t\t\t\t})\n\t\t\t\t['finally'](function onFinally() {\n\t\t\t\t\tproclaim.ok(arguments.length === 0);\n\t\t\t\t\tsetTimeout(done, 0.1e3);\n\t\t\t\t\treturn new Promise(function() {}); // forever pending\n\t\t\t\t}).then(function onFulfilled(x) {\n\t\t\t\t\tthrow new Error('should not be called');\n\t\t\t\t}, function onRejected() {\n\t\t\t\t\tthrow new Error('should not be called');\n\t\t\t\t});\n\t\t});\n\t});\n\n\tdescribe('returns an immediately-fulfilled promise', function() {\n\t\tspecify('from resolved', function() {\n\t\t\treturn Promise.resolve(3)\n\t\t\t\t.then(function(x) {\n\t\t\t\t\tproclaim.strictEqual(x, 3);\n\t\t\t\t\treturn x;\n\t\t\t\t})\n\t\t\t\t['finally'](function onFinally() {\n\t\t\t\t\tproclaim.ok(arguments.length === 0);\n\t\t\t\t\treturn Promise.resolve(4);\n\t\t\t\t}).then(function onFulfilled(x) {\n\t\t\t\t\tproclaim.strictEqual(x, 3);\n\t\t\t\t}, function onRejected() {\n\t\t\t\t\tthrow new Error('should not be called');\n\t\t\t\t});\n\t\t});\n\n\t\tspecify('from rejected', function() {\n\t\t\treturn Promise.reject(someRejectionReason)\n\t\t\t\t['catch'](function(e) {\n\t\t\t\t\tproclaim.strictEqual(e, someRejectionReason);\n\t\t\t\t\tthrow e;\n\t\t\t\t})\n\t\t\t\t['finally'](function onFinally() {\n\t\t\t\t\tproclaim.ok(arguments.length === 0);\n\t\t\t\t\treturn Promise.resolve(4);\n\t\t\t\t}).then(function onFulfilled() {\n\t\t\t\t\tthrow new Error('should not be called');\n\t\t\t\t}, function onRejected(e) {\n\t\t\t\t\tproclaim.strictEqual(e, someRejectionReason);\n\t\t\t\t});\n\t\t});\n\t});\n\n\tdescribe('returns an immediately-rejected promise', function() {\n\t\tspecify('from resolved ', function() {\n\t\t\treturn Promise.resolve(3)\n\t\t\t\t.then(function(x) {\n\t\t\t\t\tproclaim.strictEqual(x, 3);\n\t\t\t\t\treturn x;\n\t\t\t\t})\n\t\t\t\t['finally'](function onFinally() {\n\t\t\t\t\tproclaim.ok(arguments.length === 0);\n\t\t\t\t\treturn Promise.reject(4);\n\t\t\t\t}).then(function onFulfilled(x) {\n\t\t\t\t\tthrow new Error('should not be called');\n\t\t\t\t}, function onRejected(e) {\n\t\t\t\t\tproclaim.strictEqual(e, 4);\n\t\t\t\t});\n\t\t});\n\n\t\tspecify('from rejected', function() {\n      \t\tvar newReason = {};\n\t\t\treturn Promise.reject(someRejectionReason)\n\t\t\t\t['catch'](function(e) {\n\t\t\t\t\tproclaim.strictEqual(e, someRejectionReason);\n\t\t\t\t\tthrow e;\n\t\t\t\t})\n\t\t\t\t['finally'](function onFinally() {\n\t\t\t\t\tproclaim.ok(arguments.length === 0);\n\t\t\t\t\treturn Promise.reject(newReason);\n\t\t\t\t}).then(function onFulfilled(x) {\n\t\t\t\t\tthrow new Error('should not be called');\n\t\t\t\t}, function onRejected(e) {\n\t\t\t\t\tproclaim.strictEqual(e, newReason);\n\t\t\t\t});\n\t\t});\n\t});\n\n\tdescribe('returns a fulfilled-after-a-second promise', function() {\n\t\tspecify('from resolved', function(done) {\n\t\t\tPromise.resolve(3)\n\t\t\t\t.then(function(x) {\n\t\t\t\t\tproclaim.strictEqual(x, 3);\n\t\t\t\t\treturn x;\n\t\t\t\t})\n\t\t\t\t['finally'](function onFinally() {\n\t\t\t\t\tproclaim.ok(arguments.length === 0);\n\t\t\t\t\tsetTimeout(done, 1.5e3);\n\t\t\t\t\treturn new Promise(function(resolve) {\n\t\t\t\t\t\tsetTimeout(function() { return resolve(4)}, 1e3);\n\t\t\t\t\t});\n\t\t\t\t}).then(function onFulfilled(x) {\n\t\t\t\t\tproclaim.strictEqual(x, 3);\n\t\t\t\t}, function onRejected() {\n\t\t\t\t\tthrow new Error('should not be called');\n\t\t\t\t});\n\t\t});\n\n\t\tspecify('from rejected', function(done) {\n\t\t\tPromise.reject(3)\n\t\t\t\t['catch'](function(e) {\n\t\t\t\t\tproclaim.strictEqual(e, 3);\n\t\t\t\t\tthrow e;\n\t\t\t\t})\n\t\t\t\t['finally'](function onFinally() {\n\t\t\t\t\tproclaim.ok(arguments.length === 0);\n\t\t\t\t\tsetTimeout(done, 1.5e3);\n\t\t\t\t\treturn new Promise(function(resolve) {\n\t\t\t\t\t\tsetTimeout(function() { return resolve(4)}, 1e3);\n\t\t\t\t\t});\n\t\t\t\t}).then(function onFulfilled() {\n\t\t\t\t\tthrow new Error('should not be called');\n\t\t\t\t}, function onRejected(e) {\n\t\t\t\t\tproclaim.strictEqual(e, 3);\n\t\t\t\t});\n\t\t});\n\t});\n\n\tdescribe('returns a rejected-after-a-second promise', function() {\n\t\tspecify('from resolved', function(done) {\n\t\t\tPromise.resolve(3)\n\t\t\t\t.then(function(x) {\n\t\t\t\t\tproclaim.strictEqual(x, 3);\n\t\t\t\t\treturn x;\n\t\t\t\t})\n\t\t\t\t['finally'](function onFinally() {\n\t\t\t\t\tproclaim.ok(arguments.length === 0);\n\t\t\t\t\tsetTimeout(done, 1.5e3);\n\t\t\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\t\t\tsetTimeout(function() { return reject(4)}, 1e3);\n\t\t\t\t\t});\n\t\t\t\t}).then(function onFulfilled(x) {\n\t\t\t\t\tproclaim.strictEqual(x, 3);\n\t\t\t\t}, function onRejected() {\n\t\t\t\t\tthrow new Error('should not be called');\n\t\t\t\t});\n\t\t});\n\n\t\tspecify('from rejected', function(done) {\n\t\t\tPromise.reject(someRejectionReason)\n\t\t\t\t['catch'](function(e) {\n\t\t\t\t\tproclaim.strictEqual(e, someRejectionReason);\n\t\t\t\t\tthrow e;\n\t\t\t\t})\n\t\t\t\t['finally'](function onFinally() {\n\t\t\t\t\tproclaim.ok(arguments.length === 0);\n\t\t\t\t\tsetTimeout(done, 1.5e3);\n\t\t\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\t\t\tsetTimeout(function() { return reject(anotherReason)}, 1e3);\n\t\t\t\t\t});\n\t\t\t\t}).then(function onFulfilled() {\n\t\t\t\t\tthrow new Error('should not be called');\n\t\t\t\t}, function onRejected(e) {\n\t\t\t\t\tproclaim.strictEqual(e, anotherReason);\n\t\t\t\t});\n\t\t});\n\t});\n});"}