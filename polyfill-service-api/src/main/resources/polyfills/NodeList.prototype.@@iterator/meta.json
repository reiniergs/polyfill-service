{"browsers":{"ie":"9 - *","ie_mob":"9 - *","safari":"<9","chrome":"<50","firefox":"<40","ios_saf":"*","opera":"<50","samsung_mob":"<5","bb":"10 - *"},"dependencies":["_ArrayIterator","Symbol.iterator"],"license":"MIT","spec":"https://dom.spec.whatwg.org/#nodelist","detectSource":"'Symbol' in this && 'iterator' in this.Symbol && (function () {\n\tvar fragment = document.createDocumentFragment();\n\tfragment.appendChild(document.createElement('div'));\n\treturn !!fragment.childNodes[Symbol.iterator];\n})()","testSource":"","baseDir":"NodeList/prototype/@@iterator","hasTests":true,"testsSource":"/* eslint-env mocha, browser*/\n/* global proclaim, it */\n\nfunction getNodeList () {\n\tvar fragment = document.createDocumentFragment();\n\tfragment.appendChild(document.createElement('div'));\n\tfragment.appendChild(document.createElement('div'));\n\treturn fragment.childNodes;\n}\n\nit('exists', function () {\n\tif (!Symbol || !Symbol.iterator) {\n\t\tproclaim.fail();\n\t\treturn;\n\t}\n\tproclaim.isInstanceOf(getNodeList()[Symbol.iterator], Function);\n});\n\nit('returns a next-able object', function () {\n\tvar nodeList = getNodeList();\n\tvar iterator = nodeList[Symbol.iterator]();\n\n\tproclaim.isInstanceOf(iterator.next, Function);\n\tproclaim.deepEqual(iterator.next(), {\n\t\tvalue: nodeList[0],\n\t\tdone: false\n\t});\n});\n\nit('finally returns a done object', function () {\n\tvar nodeList = getNodeList();\n\tvar iterator = nodeList[Symbol.iterator]();\n\titerator.next();\n\titerator.next();\n\tproclaim.equal(iterator.next().done, true);\n});"}