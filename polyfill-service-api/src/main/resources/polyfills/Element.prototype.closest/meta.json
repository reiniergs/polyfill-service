{"aliases":["default-3.3","default-3.4","default-3.5","default-3.6","default","blissfuljs"],"browsers":{"bb":"*","android":"<5","chrome":"* - 41","ie":"*","ie_mob":"*","ios_saf":"<9","firefox":"6 - 34","opera":"<28","op_mini":"*","op_mob":"<33","safari":"<9","firefox_mob":"6 - 43"},"dependencies":["Element.prototype.matches"],"docs":"https://developer.mozilla.org/en-US/docs/Web/API/Element/closest","spec":"http://dom.spec.whatwg.org/#dom-element-closest","detectSource":"'document' in this && \"closest\" in document.documentElement","testSource":"","baseDir":"Element/prototype/closest","hasTests":true,"testsSource":"/* eslint-env mocha, browser*/\n/* global proclaim, it */\n\nit(\"should return the first ancestor that matches selectors\", function() {\n\tvar el = document.body.appendChild(document.createElement(\"p\"));\n\tvar firstInnerEl = document.createElement(\"a\");\n\tel.className = \"baz\";\n\n\tel.appendChild(firstInnerEl);\n\n\tvar closest = firstInnerEl.closest(\"p\");\n\tproclaim.equal(closest, el);\n\tproclaim.equal(closest.className, \"baz\");\n\n\tdocument.body.removeChild(el);\n});\n\nit(\"should return the first inclusive ancestor that matches selectors\", function() {\n\tvar el = document.body.appendChild(document.createElement(\"p\"));\n\tvar firstInnerEl = document.createElement(\"a\");\n\tel.className = \"baz\";\n\tfirstInnerEl.className = \"foo\";\n\n\tel.appendChild(firstInnerEl);\n\n\tvar closest = firstInnerEl.closest(\"a\");\n\tproclaim.equal(closest, firstInnerEl);\n\tproclaim.equal(closest.className, \"foo\");\n\n\tdocument.body.removeChild(el);\n});\n\nit(\"should return null if there are no matches\", function() {\n\tvar el = document.body.appendChild(document.createElement(\"a\"));\n\n\tproclaim.equal(el.closest(\"p\"), null);\n\n\tdocument.body.removeChild(el);\n});\n\n\n/* Skipped: This exception is actually thrown by querySelector, and cannot be thrown by\n * the polyfill, so this test will fail in some UAs. For more info see querySelector polyfill.\n */\nit.skip(\"should throw an error if the selector syntax is incorrect\", function() {\n\tvar el = document.body.appendChild(document.createElement(\"a\"));\n\n\tproclaim.throws(function () {\n\t\tel.closest(\"p<incorrectselector:><\");\n\t});\n\n\tdocument.body.removeChild(el);\n});"}