{"aliases":["es5","modernizr:es5object","default-3.5","default-3.6","default","blissfuljs"],"browsers":{"firefox":"3.6","safari":"4 - 4.1","ios_saf":"4.3","firefox_mob":"3.6","ie":"6 - 8","android":"<=4.4"},"dependencies":["Function.prototype.bind"],"docs":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty","detectSource":"'getOwnPropertyDescriptor' in Object && typeof Object.getOwnPropertyDescriptor === 'function' && (function() {\n    try {\n    \tvar object = {};\n        object.test = 0;\n        return Object.getOwnPropertyDescriptor(\n            object,\n            \"test\"\n        ).value === 0;\n    } catch (exception) {\n        return false\n    }\n}())","testSource":"","baseDir":"Object/getOwnPropertyDescriptor","hasTests":true,"testsSource":"/* eslint-env mocha, browser*/\n/* global proclaim, it */\n\n// Copied from ES5-Shim\n\ndescribe('Basic functionality', function () {\n\tit('should return undefined because the object does not own the property', function () {\n        var descr = Object.getOwnPropertyDescriptor({}, 'name');\n\n        proclaim.equal(descr, undefined);\n    });\n\n    it('should return a data descriptor', function () {\n        var descr = Object.getOwnPropertyDescriptor({ name: 'Testing' }, 'name');\n        var expected = {\n            enumerable: true,\n            configurable: true,\n            value: 'Testing',\n            writable: true\n        };\n\n        proclaim.deepEqual(descr, expected);\n    });\n\n    if ('create' in Object) {\n\t    it('should return undefined because the object does not own the property', function () {\n\t        var descr = Object.getOwnPropertyDescriptor(Object.create({ name: 'Testing' }, {}), 'name');\n\n\t        proclaim.equal(descr, undefined);\n\t    });\n\n    \tit('should return a data descriptor', function () {\n\t        var expected = {\n\t            value: 'Testing',\n\t            configurable: true,\n\t            enumerable: true,\n\t            writable: true\n\t        };\n\t        var obj = Object.create({}, { name: expected });\n\n\t        var descr = Object.getOwnPropertyDescriptor(obj, 'name');\n\n\t        proclaim.deepEqual(descr, expected);\n\t    });\n    }\n\n    it('should throw error for non object', function () {\n\ttry {\n\t\t// note: in ES6, we expect this to return undefined.\n\t\tproclaim.isUndefined(Object.getOwnPropertyDescriptor(42, 'name'));\n\t} catch (err) {\n\t\tproclaim.isInstanceOf(err, TypeError);\n\t}\n    });\n});"}