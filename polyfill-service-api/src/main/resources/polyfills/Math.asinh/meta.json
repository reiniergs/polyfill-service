{"aliases":["es6"],"browsers":{"android":"*","bb":"*","chrome":"1 - 37","firefox":"1 - 24","ie":"*","ie_mob":"10 - *","ios_chr":"*","ios_saf":"4 - 7","opera":"10 - 20","op_mob":"*","op_mini":"*","safari":"4 - 7","firefox_mob":"1 - 24"},"docs":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/asinh","spec":"http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.asinh","detectSource":"'asinh' in Math","testSource":"","baseDir":"Math/asinh","hasTests":true,"testsSource":"/* eslint-env mocha, browser*/\n/* global proclaim, it */\n\n// Returns an implementation-dependent approximation to the inverse hyperbolic sine of x.\n// See: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.asinh\n\nit(\"Should return NaN if the parameter is NaN\", function() {\n\tvar x = Math.asinh(NaN);\n\tproclaim.equal(x.toString(), NaN.toString());\n});\n\nit(\"Should return 0 if the parameter is 0\", function() {\n\tvar x = Math.asinh(0);\n\tproclaim.equal(x, 0);\n});\n\nit(\"Should return Number.POSITIVE_INFINITY if the parameter is Number.POSITIVE_INFINITY\", function() {\n\tvar x = Math.asinh(Number.POSITIVE_INFINITY);\n\tproclaim.equal(x, Number.POSITIVE_INFINITY);\n});\n\nit(\"Should return Number.NEGATIVE_INFINITY if the parameter is Number.NEGATIVE_INFINITY\", function() {\n\tvar x = Math.asinh(Number.NEGATIVE_INFINITY);\n\tproclaim.equal(x, Number.NEGATIVE_INFINITY);\n});\n\nit(\"Should approximate the inverse hyperbolic sine of the parameter\", function() {\n\tvar x = Math.asinh(0.5);\n\tproclaim.lessThanOrEqual(x, 0.5);\n\tproclaim.greaterThanOrEqual(x, 0.4);\n});"}