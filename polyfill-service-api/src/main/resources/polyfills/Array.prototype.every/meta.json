{"aliases":["default-3.3","default-3.4","default-3.5","default-3.6","default","es5","modernizr:es5array"],"browsers":{"ie":"6 - 8"},"spec":"http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.every","docs":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every","detectSource":"'every' in Array.prototype","testSource":"","baseDir":"Array/prototype/every","hasTests":true,"testsSource":"/* eslint-env mocha, browser*/\n/* global proclaim, it */\n\nit('has correct instance', function () {\n\tproclaim.isInstanceOf(Array.prototype.every, Function);\n});\n\nit('has correct name', function () {\n\tfunction nameOf(fn) {\n\t\treturn Function.prototype.toString.call(fn).match(/function\\s*([^\\s]*)\\(/)[1];\n\t}\n\tproclaim.equal(nameOf(Array.prototype.every), 'every');\n});\n\nit('has correct argument length', function () {\n\tproclaim.equal(Array.prototype.every.length, 1);\n});\n\ndescribe('callback', function () {\n\tit('has correct argument length', function () {\n\t\t[10, 11, 12].every(function () {\n\t\t\tproclaim.equal(arguments.length, 3);\n\t\t});\n\t});\n});\n\ndescribe('applies callback correctly with', function () {\n\tfunction elementIsGreaterThan9(element) {\n\t\treturn element > 9;\n\t}\n\n\tfunction elementIsGreaterThan10(element) {\n\t\treturn element > 10;\n\t}\n\n\tit('arrays', function () {\n\t\tproclaim.equal([10, 11, 12].every(elementIsGreaterThan9), true);\n\t\tproclaim.equal([10, 11, 12].every(elementIsGreaterThan10), false);\n\t});\n\n\tit('array-like objects', function () {\n\t\tvar\n\t\t// 3: 0 is ignored because length omits it\n\t\tobject = { 0: 10, 1: 11, 2: 12, 3: 0, length: 3 };\n\n\t\tproclaim.equal(Array.prototype.every.call(object, elementIsGreaterThan9), true);\n\t\tproclaim.equal(Array.prototype.every.call(object, elementIsGreaterThan10), false);\n\t});\n});"}