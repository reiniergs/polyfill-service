{"aliases":["es6","modernizr:es6array"],"browsers":{"ie":"9 - 12","ie_mob":"9 - 12","firefox":"<38","chrome":"<49","safari":"<9","android":"<5.1","ios_saf":"<9","opera":"<25","samsung_mob":"<5"},"dependencies":["_ArrayIterator","Symbol.iterator"],"spec":"http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype-@@iterator","docs":"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/@@iterator","detectSource":"'Symbol' in this && 'iterator' in this.Symbol && !!Array.prototype[Symbol.iterator]","testSource":"","baseDir":"Array/prototype/@@iterator","hasTests":true,"testsSource":"/* eslint-env mocha, browser*/\n/* global proclaim, it */\n\nit('is named \\'values\\' or \\'ArrayValues\\'', function () {\n\t// Don't fail tests just because browser doesn't support the Function.name polyfill\n\tif ([][Symbol.iterator].name) {\n\t\ttry {\n\t\t\tproclaim.equal([][Symbol.iterator].name, 'values');\n\t\t} catch (e) {\n\t\t\t// Chrome 40 implements the Symbol.iterator function for Arrays but has it named ArrayValues.\n\t\t\tproclaim.equal([][Symbol.iterator].name, 'ArrayValues');\n\t\t}\n\t}\n});\n\nit('returns a next-able object', function () {\n\tvar array = ['val1', 'val2'];\n\tvar iterator = array[Symbol.iterator]();\n\n\tproclaim.isInstanceOf(iterator.next, Function);\n\tproclaim.deepEqual(iterator.next(), {\n\t\tvalue: 'val1',\n\t\tdone: false\n\t});\n});\n\nit('finally returns a done object', function () {\n\tvar array = ['val1', 'val2'];\n\tvar iterator = array[Symbol.iterator]();\n\titerator.next();\n\titerator.next();\n\tproclaim.deepEqual(iterator.next(), {\n\t\tvalue: undefined,\n\t\tdone: true\n\t});\n});"}