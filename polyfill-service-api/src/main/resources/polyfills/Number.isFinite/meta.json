{"aliases":["es6"],"browsers":{"ie":"*","firefox":"<16","chrome":"<19","safari":"<9","opera":"<15"},"license":"MIT","spec":"http://www.ecma-international.org/ecma-262/6.0/#sec-isfinite-number","docs":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite","detectSource":"'isFinite' in Number","testSource":"","baseDir":"Number/isFinite","hasTests":true,"testsSource":"/* eslint-env mocha, browser*/\n/* global proclaim, it */\n\nit('has correct instance', function () {\n\tproclaim.isInstanceOf(Number.isFinite, Function);\n});\n\nit('has correct argument length', function () {\n\tproclaim.equal(Number.isFinite.length, 1);\n});\n\nit('returns true with finite values', function () {\n\tproclaim.equal(Number.isFinite(0), true);\n\tproclaim.equal(Number.isFinite(2e64), true);\n});\n\nit('retuns false for infinite values', function () {\n\tproclaim.equal(Number.isFinite(\"0\"), false);\n\tproclaim.equal(Number.isFinite(null), false);\n\tproclaim.equal(Number.isFinite(undefined), false);\n\tproclaim.equal(Number.isFinite(Infinity), false);\n\tproclaim.equal(Number.isFinite(-Infinity), false);\n});"}