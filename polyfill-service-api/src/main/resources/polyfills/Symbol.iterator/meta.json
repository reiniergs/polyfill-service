{"aliases":["es6"],"browsers":{"ie":"< 13","ie_mob":"*","safari":"<9","chrome":"< 50","firefox":"< 40","ios_saf":"*","opera":"< 37","samsung_mob":"<5","android":"<5.1","bb":"10 - *"},"dependencies":["Object.defineProperty","Symbol"],"license":"MIT","spec":"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-symbol.iterator","docs":"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Symbol","detectSource":"'Symbol' in this && 'iterator' in this.Symbol","testSource":"","baseDir":"Symbol/iterator","hasTests":true,"testsSource":"/* eslint-env mocha, browser*/\n/* global proclaim, it */\n\nvar arePropertyDescriptorsSupported = function () {\n\tvar obj = {};\n\ttry {\n\t\tObject.defineProperty(obj, 'x', { enumerable: false, value: obj });\n        /* eslint-disable no-unused-vars, no-restricted-syntax */\n        for (var _ in obj) { return false; }\n        /* eslint-enable no-unused-vars, no-restricted-syntax */\n\t\treturn obj.x === obj;\n\t} catch (e) { // this is IE 8.\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = Object.defineProperty && arePropertyDescriptorsSupported();\n\nit('has the well known symbol iterator as static properties on Symbol', function() {\n\tproclaim.notEqual(Symbol.iterator, undefined);\n\n\tif (supportsDescriptors) {\n\t\tvar iterator = Symbol.iterator;\n\t\tSymbol.iterator = \"nope\";\n\t\tproclaim.equal(Symbol.iterator, iterator);\n\t}\n});\n\nvar hasNodeListGlobal = typeof NodeList !== 'undefined' ? it : xit;\n\nhasNodeListGlobal('can attach to a NodeList correctly', function() {\n\n\tNodeList.prototype[Symbol.iterator] = function() {\n\t\tvar called = false;\n\t\tvar that = this;\n\t\tvar i = 0;\n\t\treturn {\n\t\t\tnext: function() {\n\t\t\t\tif (called) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: true\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tcalled = true;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: that[0]\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\tvar ul = document.createElement('ul');\n\tul.appendChild(document.createElement('li'));\n\n\tvar dom = ul.childNodes;\n\n\tvar iterator = dom[Symbol.iterator]();\n\tvar entry;\n\twhile(true) {\n\t\tentry = iterator.next();\n\t\tif (entry.done !== false) break;\n\t\tentry.value.innerHTML = 'Test';\n\t}\n\n\tproclaim.equal(dom[0].innerHTML, 'Test');\n});"}